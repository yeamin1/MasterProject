\documentclass{beamer}



\usepackage{listings}
\usepackage{color}

\definecolor{codegreen}{rgb}{0,0.6,0}

\lstset{ %
  basicstyle=\fontsize{9}{11}\ttfamily,
  backgroundcolor=\color{white},   % choose the background color; you must add \usepackage{color} or \usepackage{xcolor}; should come as last argument
  breakatwhitespace=false,         % sets if automatic breaks should only happen at whitespace
  captionpos=b,                    % sets the caption-position to bottom
  commentstyle=\color{codegreen},    % comment style
  keepspaces=true,                 % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
  rulecolor=\color{black},         % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
  showspaces=false,                % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
  showstringspaces=false,          % underline spaces within strings only
  showtabs=false,                  % show tabs within strings adding particular underscores
  tabsize=2,	                     % sets default tabsize to 2 spaces
}





\mode<presentation> {

% The Beamer class comes with a number of default slide themes
% which change the colors and layouts of slides. Below this is a list
% of all the themes, uncomment each in turn to see what they look like.

%\usetheme{default}
%\usetheme{AnnArbor}
%\usetheme{Antibes}
%\usetheme{Bergen}
%\usetheme{Berkeley}
%\usetheme{Berlin}
%\usetheme{Boadilla}
%\usetheme{CambridgeUS}
%\usetheme{Copenhagen}
%\usetheme{Darmstadt}
%\usetheme{Dresden}
%\usetheme{Frankfurt}
%\usetheme{Goettingen}
%\usetheme{Hannover}
%\usetheme{Ilmenau}
%\usetheme{JuanLesPins}
%\usetheme{Luebeck}
\usetheme{Madrid}
%\usetheme{Malmoe}
%\usetheme{Marburg}
%\usetheme{Montpellier}
%\usetheme{PaloAlto}
%\usetheme{Pittsburgh}
%\usetheme{Rochester}
%\usetheme{Singapore}
%\usetheme{Szeged}
%\usetheme{Warsaw}

% As well as themes, the Beamer class has a number of color themes
% for any slide theme. Uncomment each of these in turn to see how it
% changes the colors of your current slide theme.

%\usecolortheme{albatross}
%\usecolortheme{beaver}
%\usecolortheme{beetle}
%\usecolortheme{crane}
%\usecolortheme{dolphin}
%\usecolortheme{dove}
%\usecolortheme{fly}
%\usecolortheme{lily}
%\usecolortheme{orchid}
%\usecolortheme{rose}
%\usecolortheme{seagull}
%\usecolortheme{seahorse}
%\usecolortheme{whale}
%\usecolortheme{wolverine}

%\setbeamertemplate{footline} % To remove the footer line in all slides uncomment this line
%\setbeamertemplate{footline}[page number] % To replace the footer line in all slides with a simple slide count uncomment this line

%\setbeamertemplate{navigation symbols}{} % To remove the navigation symbols from the bottom of all slides uncomment this line
}

\usepackage{graphicx} % Allows including images
\usepackage{booktabs} % Allows the use of \toprule, \midrule and \bottomrule in tables

%----------------------------------------------------------------------------------------
%	TITLE PAGE
%----------------------------------------------------------------------------------------

\title[Short title]{
Emulate the \texttt{persp()} plot and \texttt{filled.contour()} plot on \textbf{gridGraphics}
} % The short title appears at the bottom of every slide, the full title is only on the title page

\author{Zhijian Wen} % Your name
\institute[UOA] % Your institution as it will appear on the bottom of every slide, may be shorthand to save space
{
University of Auckland \\ % Your institution for the title page
\medskip
\textit{jwen246@aucklanduni.ac.nz} % Your email address
}
\date{\today} % Date, can be changed to a custom date

\begin{document}
\SweaveOpts{concordance=TRUE}

\begin{frame}
\titlepage % Print the title page as the first slide
\end{frame}

\begin{frame}
\frametitle{Overview} % Table of contents slide, comment this block out to remove it
\tableofcontents % Throughout your presentation, if you choose to use \section{} and \subsection{} commands, these will automatically be printed on this slide as an overview of your presentation
\end{frame}

%----------------------------------------------------------------------------------------
%	PRESENTATION SLIDES
%----------------------------------------------------------------------------------------

%------------------------------------------------

\begin{frame}[fragile]

\frametitle{Introduction}
What is \textbf{graphics} and what is \textbf{grid} ?
\begin{center}
\includegraphics[width = 8cm, height = 6cm]{plot/grid_and_graphics.PNG}
\end{center}

\end{frame}

%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Introduction}
Then, what is \textbf{gridGraphics}? \\

\begin{enumerate}
	\item A \textbf{R} package 
	\item A ``translator'' that translates a \textbf{graphics}-plot to a \textbf{grid}-plot 
	\item With a main function \texttt{grid.echo()}.
\end{enumerate}

\end{frame}



%------------------------------------------------

\begin{frame}[fragile]

\frametitle{Introduction}

What is \textbf{gridGraphics}?
\begin{center}
\includegraphics[width = 8cm, height = 6cm]{plot/grid_graphics.png}
\end{center}

\end{frame}

%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Example}
<<Intro_0, echo=FALSE, results=hide>>=
pdf('plot/intro_%0d.pdf', onefile = FALSE)
dev.control('enable')
@
<<Intro_1>>=
plot(cars$dist ~ cars$speed, pch = 16, 
     col = 'orange', main = 'Distance vs Speed')
library(gridGraphics)
grid.echo()
@
<<Intro_2, echo=FALSE, results=hide>>=
dev.off()
@
\begin{center}
  \includegraphics[height = 5.5cm, width = 5.5cm]{plot/intro_1.pdf}
  \includegraphics[height = 5.5cm, width = 5.5cm]{plot/intro_2.pdf}
\end{center}
\end{frame}

%------------------------------------------------

\begin{frame}[fragile]
\frametitle{The problem}
<<Intro_3, echo=TRUE>>=
x = y = seq(-4*pi, 4*pi, len = 27)
r = sqrt(outer(x^2, y^2, "+"))
filled.contour(cos(r^2)*exp(-r/(2*pi)))
grid.echo()
@
\begin{center}
  \includegraphics[height = 5.5cm, width = 5.5cm]{plot/report_fill_1}
  \includegraphics[height = 5.5cm, width = 5.5cm]{plot/report_fill_2}
\end{center}

\end{frame}

%------------------------------------------------

\begin{frame}[fragile]
\frametitle{How \textbf{gridGraphics} works?}

<<Intro_3, echo=FALSE>>=
pdf('plot/intro_%0d.pdf', onefile = FALSE)
dev.control('enable')
plot(cars$dist ~ cars$speed, pch = 16, 
     col = 'orange', main = 'Distance vs Speed')
@

\begin{lstlisting}[language = R]
x <- recordPlot()
unlist(lapply(x[[1]], function(y) y[[2]][[1]]$name))
\end{lstlisting}

\begin{columns}[c]
\column{0.3\textwidth}
\begin{lstlisting}[language = R]
"C_plot_new"    
"palette2"      
"C_plot_window" 
"C_plotXY"      
"C_axis"        
"C_axis"       
"C_box"         
"C_title"    
\end{lstlisting}


\column{0.6\textwidth}
\includegraphics[height = 6cm, width = 6cm]{plot/intro_1.pdf}

\end{columns}

\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{How \textbf{gridGraphics} works?}
<<Intro_3, echo=FALSE>>=
pdf('plot/persp_%0d.pdf', onefile = FALSE)
dev.control('enable')
par(mar = c(0,2,0,2))
Sinc_Curve = function(){
  x <- seq(-10, 10, length= 30)
  y <- x
  f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
  z <- outer(x, y, f)
  z[is.na(z)] <- 1
  
  persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
      ltheta = 120, shade = 0.75, ticktype = "detailed",
      xlab = "X", ylab = "Y", zlab = "Sinc( r )")
  }

@
<<Problem_1>>=
Sinc_Curve()
@
<<Problem_2, echo=FALSE, results=hide>>=
dev.off()
@
\begin{center}
  \includegraphics[height = 7.5cm, width = 7.5cm]{plot/persp_1}
\end{center}



\end{frame}

%------------------------------------------------

\begin{frame}[fragile]
\frametitle{How \textbf{gridGraphics} works?}
<<Problem_00, echo = FALSE>>=
pdf('plot/persp_2.pdf', onefile = FALSE)
dev.control('enable')
Sinc_Curve()
@
<<Problem_1, echo=TRUE>>=
x <- recordPlot()
lapply(x[[1]], function(y) y[[2]][[1]]$name)
@
<<Intro_2, echo=FALSE, results=hide>>=
dev.off()
@
\begin{center}
\end{center}

\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Structure of the \textbf{C} code (\textif{pointers})}
\begin{block}{The problems}
\begin{lstlisting}{C}
static int LimitCheck(double *lim, double *c, double *s)
{
    if(!R_FINITE(lim[0]) || !R_FINITE(lim[1]) || 
          lim[0] >= lim[1])
    return 0;
    *s = 0.5 * fabs(lim[1] - lim[0]) ;
    *c = 0.5 * (lim[1] + lim[0]) ;
    return 1;
}
...
if(!LimitCheck(REAL(xlim), &xc, &xs))
	error(_("invalid 'x' limits"));
\end{lstlisting}
\end{block}

\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Structure of the \textbf{C} code (\textif{pointers})}
\begin{block}{Solution}
\begin{lstlisting}{C}
LimitCheck = function(lim){
    if(!is.finite(lim[1]) || !is.finite(lim[2]) 
            || lim[1] >= lim[2])
        stop("invalid limits");
      
    s = 0.5 * abs (lim[2] - lim[1])
    c = 0.5 * (lim[2] + lim[1])
    c(s , c)
}
xs = LimitCheck(xr)[1]
xc = LimitCheck(xr)[2]
...
\end{lstlisting}
\end{block}

\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{How much \textbf{C} codes?}
\begin{center}
\includegraphics{plot/code.png}
\end{center}
\end{frame}



%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Copy or not copy?}
\begin{block}{Why just 'copy'?}
FILL IT!!
\end{block}

\begin{block}{Why just not 'copy'?}
FILL IT!!
\end{block}
\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Why just not 'copy'?}

\begin{columns}[c]
\column{0.4\textwidth}
\begin{lstlisting}[language = R]
volcano_filled.contour()
xx = recordPlot()
info = xx[[1]][[12]][[2]]

dim(info[[4]])
[1] 87 61

length(info[[5]])
[1] 22
 
\end{lstlisting}
\column{0.6\textwidth}
\begin{center}
\includegraphics{plot/filled_example_1}
\end{center}

\end{columns}
There are at most (87 - 1) * (61 - 1) * (22 - 1) =  108360 polygons.


\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Why just not 'copy'?}

\begin{columns}[c]
\column{0.4\textwidth}
\begin{lstlisting}[language = R]
volcano_filled.contour()

## time comparison
## time for loop version
system.time(grid.echo())
# user system elapsed
# 10.03 0.23 10.32

## time for vectorizetion
system.time(grid.echo())
# user system elapsed
# 1.28 0.53 1.82
\end{lstlisting}

\column{0.6\textwidth}
\begin{center}
\includegraphics{plot/filled_example_1}
\end{center}

\end{columns}
\end{frame}



%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Any difference?}
\begin{lstlisting}[language = R]
## left plot
Sinc_Curve(col = ??)
## right plot
Sinc_Curve(col = ??)
\end{lstlisting}

\begin{columns}[c]
\column{0.5\textwidth}
\includegraphics[height = 6cm, width = 6cm]{plot/persp_diff_1.pdf}

\column{0.5\textwidth}
\includegraphics[height = 6cm, width = 6cm]{plot/persp_diff_2.pdf}

\end{columns}
\end{frame}



%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Answers}

\texttt{\textcolor{codegreen}{\#\# color for left plot}}\\
\texttt{col = rgb(0, \textcolor{red}{191}, 255, maxColorValue = 255)} \\

\texttt{\textcolor{codegreen}{\#\# extra diff color for right plot}}\\
\texttt{col = rgb(0, \textcolor{red}{190}, 255, maxColorValue = 255)} \\

\begin{center}
\includegraphics[height = 6cm, width = 6cm]{plot/persp_diff_3.pdf}
\end{center}

\end{frame}


%------------------------------------------------

\begin{frame}[fragile]
\frametitle{The solustions}

\texttt{\textcolor{codegreen}{\#\# color for left plot}}\\
\texttt{col = rgb(0, \textcolor{red}{191}, 255, maxColorValue = 255)} \\

\texttt{\textcolor{codegreen}{\#\# extra diff color for right plot}}\\
\texttt{col = rgb(0, \textcolor{red}{190}, 255, maxColorValue = 255)} \\

\begin{center}
\includegraphics[height = 6cm, width = 6cm]{plot/persp_diff_3.pdf}
\end{center}

\end{frame}



%------------------------------------------------
<<persp_solution, echo = FALSE, results = hide>>=
Torus = function(theta=120, phi = 20, expand = 0.5, col = 'orange ',
                      box = TRUE, border = 'NA', 
                      ticktype = 'simple', nticks = 5, ...) {
  x = seq(-1,1,length = 45)
  y = seq(-1,1,length = 45)
  f <- function(x, y) { (0.4^2-(0.6-(x^2+y^2)^0.5)^2)^0.5}
  z <- outer(x, y, f)
  nrz <- nrow(z)
  ncz <- ncol(z)
  # color
  jet.colors <- colorRampPalette( c("yellow",'gold', "orange") )
  nbcol <- 100
  color <- jet.colors(nbcol)
  zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
  facetcol <- cut(zfacet, nbcol)
  
  par(mar = c(2,2,2,2))
  expand = 0.5
  persp(x, y, z, theta = theta, 
                 phi = phi, expand = expand, 
                 col = color[facetcol], box = box, border = border, 
                 ticktype = ticktype, nticks = nticks, ...)
  
}

pdf('plot/persp_torus_%d.pdf', onefile = FALSE)
dev.control('enable')
Torus()
grid.echo()
dev.off()


pdf('plot/filled_solution_%d.pdf', onefile = FALSE)
dev.control('enable')

filled.contour(cos(r^2)*exp(-r/(2*pi)))
grid.echo()
dev.off()
@

\begin{frame}[fragile]
\frametitle{Final solution}

\only<1>{
  \texttt{> Torus()}\\
  \begin{center}
  \includegraphics[height = 8cm, width = 8cm]{plot/persp_torus_1.pdf}
  \end{center}
}

\only<2>{
  \texttt{> grid.echo()} \\
  \begin{center}
  \includegraphics[height = 8cm, width = 8cm]{plot/persp_torus_2.pdf}
  \end{center}
}

\end{frame}

%------------------------------------------------

\begin{frame}[fragile]
\frametitle{Final solution}

\only<1>{
  \texttt{> filled.contour(cos(r^2)*exp(-r/(2*pi)))}\\
  \begin{center}
  \includegraphics[height = 7cm, width = 7cm]{plot/filled_solution_1.pdf}
  \end{center}
}

\only<2>{
  \texttt{> grid.echo()} \\
  \begin{center}
  \includegraphics[height = 7cm, width = 7cm]{plot/filled_solution_2.pdf}
  \end{center}
}

\end{frame}

%------------------------------------------------


<<R3, echo = FALSE, results = hide>>=
x = 10*1:nrow(volcano)
y = 10*1:ncol(volcano)
volcano_filled.contour = function()
{
    filled.contour(x, y, volcano, color = terrain.colors,
        plot.title = title(main = "The Topography of Maunga Whau",
        xlab = "Meters North", ylab = "Meters West"),
        plot.axes = { axis(1, seq(100, 800, by = 100))
        axis(2, seq(100, 600, by = 100)) },
        key.title = title(main = "Height\n(meters)"),
        key.axes = axis(4, seq(90, 190, by = 10)))
}

Volcano.persp.svg = function(theta = 110, phi = 60)
{
  z <- 2 * volcano
  x <- 10 * (1:nrow(z))
  y <- 10 * (1:ncol(z))
  z0 <- min(z) - 20
  z <- rbind(z0, cbind(z0, z, z0), z0)
  x <- c(min(x) - 1e-10, x, max(x) + 1e-10)
  y <- c(min(y) - 1e-10, y, max(y) + 1e-10)
  fill <- matrix("green3", nrow = nrow(z)-1, ncol = ncol(z)-1)
  fill[ , i2 <- c(1,ncol(fill))] <- "green"
  fill[i1 <- c(1,nrow(fill)) , ] <- "green"
  fcol <- fill
  zi <- volcano[ -1,-1] + volcano[ -1,-61] +
    volcano[-87,-1] + volcano[-87,-61]  ## / 4
  fcol[-i1,-i2] <-
    terrain.colors(20)[cut(zi,
                           stats::quantile(zi, seq(0,1, length.out = 21)),
                           include.lowest = TRUE)]
  persp(x, y, 2*z, theta = theta, phi = phi, col = fcol, scale = FALSE,
        ltheta = -120, shade = 0.4, border = NA, box = FALSE)
}

Volcano.persp = function()
{
    par(mar = c(0, 0, 0, 0))
    Volcano.persp.svg(theta = 0, phi = 60)
}

pdf('plot/demo_example_%d.pdf', width = 10, height = 5, onefile = FALSE)
par(mfrow = c(1,2))
Volcano.persp()
box('outer', col = 'red')

par(mar = c(5,5,5,5))
volcano_filled.contour()
box('outer', col = 'red')
dev.off()


pdf('plot/demo_grid_example_%d.pdf', width = 10, height = 5, onefile = FALSE)

grid.newpage()
vp = viewport(y=1, height=.5, just="top", width = 1)
pushViewport(vp)

pushViewport(viewport(x = 0.56, y=0.25, height=.5, width = 1))


@

\begin{frame}[fragile]
\frametitle{Final solution}

\only<1>{
  \texttt{> par(mfrow = c(1,2))}\\
  \texttt{> Volcano.persp()}\\
  \texttt{> box('outer', col = 'red')}\\

  \begin{center}
  \includegraphics[height = 5cm, width = 10cm]{plot/demo_example_1.pdf}
  \end{center}
}

\only<2>{
  \texttt{> par(mfrow = c(1,2))}\\
  \texttt{> Volcano.persp()}\\
  \texttt{> box('outer', col = 'red')}\\
  \texttt{> volcano\_filled.contour()}\\
  \begin{center}
  \includegraphics[height = 5cm, width = 10cm]{plot/demo_example_2.pdf}
  \end{center}
}

\end{frame}



\end{document}