This is pdfTeX, Version 3.14159265-2.6-1.40.17 (MiKTeX 2.9) (preloaded format=pdflatex 2016.7.22)  9 JUN 2017 14:52
entering extended mode
**./Appendix.tex
(Appendix.tex
LaTeX2e <2016/03/31> patch level 1
Babel <3.9r> and hyphenation patterns for 75 language(s) loaded.
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\base\report.cls"
Document Class: report 2014/09/29 v1.4h Standard LaTeX document class
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\base\size10.clo"
File: size10.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@chapter=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\c@figure=\count86
\c@table=\count87
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
! Undefined control sequence.
l.5 \definecolor
                {darkred}{rgb}{0.26,0.23,0.23}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.5 \definecolor{d
                  arkred}{rgb}{0.26,0.23,0.23}
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.6 \definecolor
                {codegreen}{rgb}{0,0.6,0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.7 \definecolor
                {purple}{rgb}{0.65, 0.12, 0.82}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.9 \lstdefinelanguage
                      {JavaScript}{
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.9 \lstdefinelanguage{J
                        avaScript}{
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.13   ndkeywordstyle=\color
                            {darkgray}\bfseries,
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.14   identifierstyle=\color
                             {black},
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.18   commentstyle=\color
                          {purple}\ttfamily,
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

LaTeX Font Info:    Font shape `OT1/cmtt/bx/n' in size <10> not available
(Font)              Font shape `OT1/cmtt/m/n' tried instead on input line 18.
! Undefined control sequence.
l.21 \lstset
            { %
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.22   b
        asicstyle=\footnotesize\ttfamily,
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.23   backgroundcolor=\color
                             {white},   % choose the background color; you m...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.27   commentstyle=\color
                          {codegreen},    % comment style
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.30   rulecolor=\color
                       {black},         % if not set, the frame-color may be...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


Overfull \hbox (75.75604pt too wide) in paragraph at lines 22--36
\OT1/cmtt/m/n/8 captionpos=b, commentstyle=codegreen, frame=tb, keepspaces=true
, rulecolor=black, showspaces=false,
 []

("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\soul\soul.sty"
Package: soul 2003/11/17 v2.4 letterspacing/underlining (mf)
\SOUL@word=\toks14
\SOUL@lasttoken=\toks15
\SOUL@cmds=\toks16
\SOUL@buffer=\toks17
\SOUL@token=\toks18
\SOUL@spaceskip=\skip43
\SOUL@ttwidth=\dimen103
\SOUL@uldp=\dimen104
\SOUL@ulht=\dimen105
)
("C:\Program Files (x86)\MiKTeX 2.9\tex\latex\setspace\setspace.sty"
Package: setspace 2011/12/19 v6.7a set line spacing
)
(Appendix.aux)
\openout1 = `Appendix.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 43.
LaTeX Font Info:    ... okay on input line 43.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 43.
LaTeX Font Info:    ... okay on input line 43.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 43.
LaTeX Font Info:    ... okay on input line 43.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 43.
LaTeX Font Info:    ... okay on input line 43.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 43.
LaTeX Font Info:    ... okay on input line 43.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 43.
LaTeX Font Info:    ... okay on input line 43.
 [1

{C:/ProgramData/MiKTeX/2.9/pdftex/config/pdftex.map}]
Chapter 1.

! LaTeX Error: Environment lstlisting undefined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.52 \begin{lstlisting}
                       [language = R]
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! You can't use `macro parameter character #' in horizontal mode.
l.53 #
      # initialize and create a viewport prepare for drawing
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.53 ##
        initialize and create a viewport prepare for drawing
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.56     #
          # [[1]] is the all the grapical information that transfer into grid
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.56     ##
            [[1]] is the all the grapical information that transfer into grid
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.57     #
          # [[3]] is the persp call information
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.57     ##
            [[3]] is the persp call information
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.58     #
          # [[2]] is the plot details eg: x, y, z, xlim, ylim, zlim, col ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.58     ##
            [[2]] is the plot details eg: x, y, z, xlim, ylim, zlim, col ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.59     #
          # create a list that store all information from the persp
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.59     ##
            create a list that store all information from the persp
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.60     #
          # then pass the information to per for drawing.
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.60     ##
            then pass the information to per for drawing.
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.61     #
          # x is [[2]]; y is [[3]]; z is [[4]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.61     ##
            x is [[2]]; y is [[3]]; z is [[4]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.62     #
          # xr is [[5]]; yr is [[6]]; zr is [[7]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.62     ##
            xr is [[5]]; yr is [[6]]; zr is [[7]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.63     #
          # col is [[14]]; border is [[15]]; box is [[19]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.63     ##
            col is [[14]]; border is [[15]]; box is [[19]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.64     #
          # axes is [[20]], nTicks is [[21]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.64     ##
            axes is [[20]], nTicks is [[21]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.65     #
          # tickType is [[22]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.65     ##
            tickType is [[22]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.66     #
          # xlab/ylab/zlab = [[23]]/[[24]]/[[25]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.66     ##
            xlab/ylab/zlab = [[23]]/[[24]]/[[25]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.67 	#
       # main is in plot[[1]][[4]][[2]][[2]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.67 	##
         main is in plot[[1]][[4]][[2]][[2]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.68     #
          # shade is 0.8, ltheta/lphi = [[16]]/[[17]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.68     ##
            shade is 0.8, ltheta/lphi = [[16]]/[[17]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.69     #
          # expand is [[13]], scale is [[12]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.69     ##
            expand is [[13]], scale is [[12]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.72 ...col = info[[14]], border = info[[15]][1] #
                                                  #only allows one color for...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.72 ...ol = info[[14]], border = info[[15]][1] ##
                                                  only allows one color for ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.78 				#
          # parameters in 'par' that need added to per
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.78 				##
            parameters in 'par' that need added to per
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 79.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 79.
! You can't use `macro parameter character #' in horizontal mode.
l.79 ...         lwd = info$lwd, lty = info$lty, #
                                                  col.axis = info$col.axis,
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.80 				#
          col.lab = info$col.lab,
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.84 				#
          main = plot[[1]][[4]][[2]][[2]]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.86 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.90 }
      
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.91 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.92 #
      # main call
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.92 ##
        main call
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.93 C_
       persp = function(plot = NULL, ...)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.98 
     
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.98 
     
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (158.17883pt too wide) in paragraph at lines 92--98
[]\OT1/cmr/m/n/10 main call C$[]\OML/cmm/m/it/10 ersp \OT1/cmr/m/n/10 = \OML/cm
m/m/it/10 function\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 plot \OT1/cmr/m/n/10 = \OML
/cmm/m/it/10 NULL; :::\OT1/cmr/m/n/10 )[]$ 
 []

! You can't use `macro parameter character #' in vertical mode.
l.99     #
          information extraction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[2

]
! Misplaced alignment tab character &.
l.141     if(any(!(is.numeric(xr) &
                                    is.numeric(yr) & is.numeric(zr)))) stop(...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.141 ...f(any(!(is.numeric(xr) & is.numeric(yr) &
                                                   is.numeric(zr)))) stop("i...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.142     if(any(!(is.finite(xr) &
                                   is.finite(yr) & is.finite(zr)))) stop("in...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.142     if(any(!(is.finite(xr) & is.finite(yr) &
                                                   is.finite(zr)))) stop("in...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.143 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (42.06494pt too wide) in paragraph at lines 138--143
[]\OT1/cmr/m/n/10 border = plot$\OML/cmm/m/it/10 border\OT1/cmr/m/n/10 [1]; \OM
L/cmm/m/it/10 if\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 is:null\OT1/cmr/m/n/10 (\OML/
cmm/m/it/10 plot$\OT1/cmr/m/n/10 lwd)) lwd = 1 else lwd = plot$\OML/cmm/m/it/10
 lwdif\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 is:null\OT1/cmr/m/n/10 (\OML/cmm/m/it/1
0 plot$\OT1/cmr/m/n/10 lty))
 []


Overfull \hbox (418.58746pt too wide) in paragraph at lines 138--143
\OT1/cmr/m/n/10 lty = 1 else lty = plot$\OML/cmm/m/it/10 ltyif\OT1/cmr/m/n/10 (
\OML/cmm/m/it/10 any\OT1/cmr/m/n/10 (!(\OML/cmm/m/it/10 is:numeric\OT1/cmr/m/n/
10 (\OML/cmm/m/it/10 xr\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 is:numeric\OT1/cmr/m/n
/10 (\OML/cmm/m/it/10 yr\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 is:numeric\OT1/cmr/m/
n/10 (\OML/cmm/m/it/10 zr\OT1/cmr/m/n/10 ))))\OML/cmm/m/it/10 stop\OT1/cmr/m/n/
10 ("\OML/cmm/m/it/10 invalidlimits\OT1/cmr/m/n/10 ")\OML/cmm/m/it/10 if\OT1/cm
r/m/n/10 (\OML/cmm/m/it/10 any\OT1/cmr/m/n/10 (!(\OML/cmm/m/it/10 is:finite\OT1
/cmr/m/n/10 (\OML/cmm/m/it/10 xr\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 is:finite\OT1
/cmr/m/n/10 (\OML/cmm/m/it/10 yr\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 is:finite\OT1
/cmr/m/n/10 (\OML/cmm/m/it/10 zr\OT1/cmr/m/n/10 ))))\OML/cmm/m/it/10 stop\OT1/c
mr/m/n/10 ("\OML/cmm/m/it/10 invalidlimits\OT1/cmr/m/n/10 ")$ 
 []

! Misplaced alignment tab character &.
l.147     if(is.finite(ltheta) &
                                & is.finite(lphi) && is.finite(shade) && col...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.147     if(is.finite(ltheta) &&
                                  is.finite(lphi) && is.finite(shade) && col...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.147 ...if(is.finite(ltheta) && is.finite(lphi) &
                                                  & is.finite(shade) && colC...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.147 ...f(is.finite(ltheta) && is.finite(lphi) &&
                                                   is.finite(shade) && colCh...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.147 ... && is.finite(lphi) && is.finite(shade) &
                                                  & colCheck)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.147 ...&& is.finite(lphi) && is.finite(shade) &&
                                                   colCheck)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in horizontal mode.
l.149     #
           # check the first color act as Fixcols
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.149     ##
             check the first color act as Fixcols
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.153     #
            create a viewport inside a 'viewport'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.156     #
           vp = viewport(0.5, 0.5, 1, 1, default.units = 'npc',
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.157     #
                           xscale = lim[1:2], yscale = lim[3:4])
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.168             PerspAxes(xr, yr, zr, #
                                         #x, y, z
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.168             PerspAxes(xr, yr, zr, ##
                                          x, y, z
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.169                     xlab, ylab, zlab, #
                                             # xlab, xenc, ylab, yenc, zlab,...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.169                     xlab, ylab, zlab, ##
                                               xlab, xenc, ylab, yenc, zlab,...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.170 ...               nTicks, tickType, trans, #
                                                  # nTicks, tickType, VT
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.170 ...              nTicks, tickType, trans, ##
                                                   nTicks, tickType, VT
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.171 ...  lwd, lty, col.axis, col.lab, cex.lab) #
                                                  # lwd, lty, col.axis, col....
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.171 ... lwd, lty, col.axis, col.lab, cex.lab) ##
                                                   lwd, lty, col.axis, col.l...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.178     #
           # draw the behind face first
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.178     ##
             draw the behind face first
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.179     #
           # return the EdgeDone inorder to not drawing the same Edege two t...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.179     ##
             return the EdgeDone inorder to not drawing the same Edege two t...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.185 ...z = plot$z, x = plot$x, y = plot$y,     #
                                                  # basic
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.185 ... = plot$z, x = plot$x, y = plot$y,     ##
                                                   basic
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.186 ...s = 1/ys, zs = expand/zs,               #
                                                  # Light
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.186 ... = 1/ys, zs = expand/zs,               ##
                                                   Light
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.187 ...                                        #
                                                  # cols
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.187 ...                                       ##
                                                   cols
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.191 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (6.25522pt too wide) in paragraph at lines 184--191
\OML/cmm/m/it/10 ltheta; lphi \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 lphi; Shade \O
T1/cmr/m/n/10 = \OML/cmm/m/it/10 shade; Light \OT1/cmr/m/n/10 = \OML/cmm/m/it/1
0 Light; trans \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 trans; DoLighting \OT1/cmr/m/
n/10 =
 []

[3]
! You can't use `macro parameter character #' in vertical mode.
l.198 #
       ###Shade function
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.198 ##
        ##Shade function
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.198 ###
         #Shade function
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.198 ####
          Shade function
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.200     #
           # not finished yet...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.200     ##
             not finished yet...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.290     sum^
              Shade
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.291 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.292 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

[4]
! You can't use `macro parameter character #' in vertical mode.
l.332 #
       # shade end...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.332 ##
         shade end...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.375         #
               # draw the face line by line rather than polygon
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.375         ##
                 draw the face line by line rather than polygon
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Misplaced alignment tab character &.
l.376         if ((front &
                          & nearby) || (!front && !nearby)) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.376         if ((front &&
                            nearby) || (!front && !nearby)) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.376         if ((front && nearby) || (!front &
                                                & !nearby)) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.376         if ((front && nearby) || (!front &&
                                                  !nearby)) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in vertical mode.
l.408     #
           # the total number of polygon that we need to draw
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.408     ##
             the total number of polygon that we need to draw
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.414     #
           # set the temp value for x,y,z prepare for subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.414     ##
             set the temp value for x,y,z prepare for subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.419     #
           # the drawing order is along x-axis, and then along y-axis
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.419     ##
             the drawing order is along x-axis, and then along y-axis
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.420     #
           # then create a vector like a 4Xn matrix,
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.420     ##
             then create a vector like a 4Xn matrix,
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.421     #
           # i.e the first column contain all the first points for every pol...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.421     ##
             i.e the first column contain all the first points for every pol...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.422     #
           # the second column contain all the second points for every polyg...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.422     ##
             the second column contain all the second points for every polyg...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[5]
! You can't use `macro parameter character #' in vertical mode.
l.428     #
           # draw the box if required
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.428     ##
             draw the box if required
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.429     #
           # the vectors now has four paths, every paths contain the informa...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.429     ##
             the vectors now has four paths, every paths contain the informa...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.430     #
           # now we need to change the order of this vector, so that the fir...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.430     ##
             now we need to change the order of this vector, so that the fir...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.431     #
           # the first points, not the first four points for the first four ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.431     ##
             the first points, not the first four points for the first four ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.432     #
           # points subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.432     ##
             points subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.439     #
           # sequence for 'problem's polygons index, e.g
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.439     ##
             sequence for 'problem's polygons index, e.g
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.440     #
           # along x-axis, there are n-1 polygons, n is the number of points...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.440     ##
             along x-axis, there are n-1 polygons, n is the number of points...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.441     #
           # we don't want to draw the nth polygon, hence we deleted those p...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.441     ##
             we don't want to draw the nth polygon, hence we deleted those p...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.444     #
           # final subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.444     ##
             final subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (54.3898pt too wide) in paragraph at lines 444--448
[]\OT1/cmr/m/n/10 final sub-set-ting xCoor = xBreak[plot.index][-dp][1 : (4 * s
tops)] yCoor = yBreak[plot.index][-
 []

! You can't use `macro parameter character #' in vertical mode.
l.449     #
           # vectorize the cols
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.449     ##
             vectorize the cols
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.450     colRep = rep_
                       len(col, length(xCoor))
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.451 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.452     #
           # use the first corner of every polygon to determind the order fo...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.452     ##
             use the first corner of every polygon to determind the order fo...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.457     #
           # method for using the zdepth for changing the drawing order for ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.457     ##
             method for using the zdepth for changing the drawing order for ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.461     #
           # the zdepth of a set of 4 points of each polygon
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.461     ##
             the zdepth of a set of 4 points of each polygon
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.471     #
           # record the total number of polygon
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.471     ##
             record the total number of polygon
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
l.476 }
       
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.477 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (21.78851pt too wide) in paragraph at lines 471--477
[]\OT1/cmr/m/n/10 record the to-tal num-ber of poly-gon pMax = length(xyCoor$\O
ML/cmm/m/it/10 x\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 =\OT1/cmr/m/n/10 4\OML/cmm/m/
it/10 pout \OT1/cmr/m/n/10 = \OML/cmm/m/it/10 list\OT1/cmr/m/n/10 (\OML/cmm/m/i
t/10 xyCoor \OT1/cmr/m/n/10 =
 []

! Missing $ inserted.
<inserted text> 
                $
l.489 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (27.98123pt too wide) in paragraph at lines 478--489
\OT1/cmr/m/n/10 trans, Do-Light-ing)  pout = dPoly-gon(x, y, z, col, trans) xy-
Coor = pout$\OML/cmm/m/it/10 xyCoorpMax \OT1/cmr/m/n/10 =
 []

! Misplaced alignment tab character &.
l.492         if(is.finite(Shade) &
                                   & Shade <= 0 ) Shade = 1
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.492         if(is.finite(Shade) &&
                                     Shade <= 0 ) Shade = 1
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in horizontal mode.
l.493 ...shadeCol(z, x, y,                       #
                                                  # x, y, z
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.493 ...hadeCol(z, x, y,                       ##
                                                   x, y, z
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.494 ...ys, zs,                                 #
                                                  # xs, ys, zs
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.494 ...s, zs,                                 ##
                                                   xs, ys, zs
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.495 ...         col,                           #
                                                  # col, ncol
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.495 ...        col,                           ##
                                                   col, ncol
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.496 ...ta, lphi, Shade, Light = Light)         #
                                                  # ltheta, lphi, Shade(not ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.496 ...a, lphi, Shade, Light = Light)         ##
                                                   ltheta, lphi, Shade(not s...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.499         #
               # clean if any NA's Z-value
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.499         ##
                 clean if any NA's Z-value
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (37.83434pt too wide) in paragraph at lines 499--506
\OT1/cmr/m/n/10 gonOrder[!misshade] poly-gons = poly-gons[!misindex,] poly-gon.
id = poly-gon.id[!misindex] 
 []

[6]
! Missing $ inserted.
<inserted text> 
                $
l.509         cols = rep_
                         len(col, length(polygons[,1]))[polygonOrder]
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.510     }
           
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.511 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (57.4711pt too wide) in paragraph at lines 507--511
[]\OT1/cmr/m/n/10 cols = shad-ed-Col[polygonOrder]  else  cols = rep$[]\OML/cmm
/m/it/10 en\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 col; length\OT1/cmr/m/n/10 (\OML/c
mm/m/it/10 polygons\OT1/cmr/m/n/10 [\OML/cmm/m/it/10 ; \OT1/cmr/m/n/10 1]))[\OM
L/cmm/m/it/10 polygonOrder\OT1/cmr/m/n/10 ]$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.520 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.529     (y1 <= y2) &
                      & (y1 <= y3) && (y1 <= y4)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.529     (y1 <= y2) &&
                        (y1 <= y3) && (y1 <= y4)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.529     (y1 <= y2) && (y1 <= y3) &
                                    & (y1 <= y4)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.529     (y1 <= y2) && (y1 <= y3) &&
                                      (y1 <= y4)
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in vertical mode.
l.558     #
           # don't know how to use numeric on the switch...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.558     ##
             don't know how to use numeric on the switch...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (9.88023pt too wide) in paragraph at lines 558--563
[]\OT1/cmr/m/n/10 don't know how to use nu-meric on the switch... ax-isType = a
s.character(axisType)
 []

! Missing $ inserted.
<inserted text> 
                $
l.570     d_
            frac = 0.1 * (max - min)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.572 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.581     #
           # but maybe not this one... haven't test yet...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.581     ##
             but maybe not this one... haven't test yet...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.582     while((min < range[1] - d_
                                    frac || range[2] + d_frac < max) && i < ...
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Misplaced alignment tab character &.
l.582 ...1] - d_frac || range[2] + d_frac < max) &
                                                  & i < 20) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.582 ...] - d_frac || range[2] + d_frac < max) &&
                                                   i < 20) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Missing $ inserted.
<inserted text> 
                $
l.588 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (16.40356pt too wide) in paragraph at lines 581--588
[]\OT1/cmr/m/n/10 but maybe not this one... haven't test yet... while((min < ra
nge[1] - d$[]\OML/cmm/m/it/10 rac\OMS/cmsy/m/n/10 jj\OML/cmm/m/it/10 range\OT1/
cmr/m/n/10 [2] +
 []


Overfull \hbox (185.12378pt too wide) in paragraph at lines 581--588
\OML/cmm/m/it/10 d[]rac < max\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 i < \OT1/cmr/m/n
/10 20)[]$ 
 []

! You can't use `macro parameter character #' in vertical mode.
l.589     #
           # axp seems working...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.589     ##
             axp seems working...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.595     #
            Do the following calculations for both ticktypes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.596     #
            Vertex is a 8*3 matrix; i.e. the vertex of a box
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.597     #
            AxisStart is a vector of length 8
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.598     #
            axis is a output
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.599     #
            u1, u2 are the vectors in 3-d
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.600     #
            the range of x,y,z
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.623     #
           #axisType, 1 = 'draw x-axis'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.623     ##
            axisType, 1 = 'draw x-axis'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.624     #
           #          2 = 'draw y-axis'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.624     ##
                      2 = 'draw y-axis'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.625     #
           #          3 = 'draw z-axis'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.625     ##
                      3 = 'draw z-axis'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[7]
Overfull \hbox (25.25078pt too wide) in paragraph at lines 645--657
\OT1/cmr/m/n/10 tickLength*(z[2]-z[1])*TickVector[axis, 3] , '2' =  u3[1] = u1[
1] + 2.5*tickLength*(x[2]-
 []


Overfull \hbox (16.91748pt too wide) in paragraph at lines 645--657
\OT1/cmr/m/n/10 x[1])*TickVector[axis, 1] u3[2] = u1[2] + 2.5*tickLength*(y[2]-
y[1])*TickVector[axis,
 []

! You can't use `macro parameter character #' in vertical mode.
l.658     #
           # u3 is the the labels at the center of each axes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.658     ##
             u3 is the the labels at the center of each axes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.672     #
           # transform the 3-d into 2-d
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.672     ##
             transform the 3-d into 2-d
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.681     #
           # label at center of each axes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.681     ##
             label at center of each axes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.683     #
           text(v3[1], v3[2], label, 0.5, srt = srt)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.686           default.units = "native", #
                                           vp = 'clipoff',
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.690     #
           # tickType is not working.. when = '2'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.690     ##
             tickType is not working.. when = '2'
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.695 	#
        # drawing the tick..
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.695 	##
          drawing the tick..
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.698 ...efault.units = "native", arrow = arrow, #
                                                  vp = 'clipoff',
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.702     #
           # '2' seems working
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.702     ##
             '2' seems working
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (11.41745pt too wide) in paragraph at lines 727--739
\OT1/cmr/m/n/10 u1[2] + tickLength*(y[2]-y[1])*TickVector[axis, 2] u2[3] = u1[3
] + tickLength*(z[2]-
 []


Overfull \hbox (38.86192pt too wide) in paragraph at lines 727--739
\OT1/cmr/m/n/10 z[1])*TickVector[axis, 3] u2[4] = 1 u3[1] = u2[1] + tickLength*
(x[2]-x[1])*TickVector[axis,
 []

[8]
! You can't use `macro parameter character #' in vertical mode.
l.744             #
                   # Draw tick line
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.744             ##
                     Draw tick line
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.746                 default.units = "native", #
                                                 #vp = 'clipoff',
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.746                 default.units = "native", ##
                                                  vp = 'clipoff',
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.750             #
                   # Draw tick label
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.750             ##
                     Draw tick label
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.753                 default.units = "native", #
                                                 vp = 'clipoff',
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.767 					#
            # parameters in par
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.767 					##
              parameters in par
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.770     xAxis = yAxis = zAxis = 0 #
                                     # -Wall
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.770     xAxis = yAxis = zAxis = 0 ##
                                       -Wall
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.802     #
           # drawing x and y axes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.802     ##
             drawing x and y axes
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.811     #
           # Figure out which Z axis to draw
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.811     ##
             Figure out which Z axis to draw
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.823     #
           # drawing the z-axis
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.823     ##
             drawing the z-axis
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.859     #
           # GScale in C
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.859     ##
             GScale in C
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[9]
! You can't use `macro parameter character #' in vertical mode.
l.879 #
       # global variables.
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.879 ##
         global variables.
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.891 	1, 1, 1,  #
                  xlim[1], ylim[1], zlim[1]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.892 	1, 1, 2,  #
                  xlim[1], ylim[1], zlim[2]
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


! LaTeX Error: \begin{document} ended by \end{lstlisting}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.917 \end{lstlisting}
                      
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing } inserted.
<inserted text> 
                }
l.917 \end{lstlisting}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.917 \end{lstlisting}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing } inserted.
<inserted text> 
                }
l.917 \end{lstlisting}
                      
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

[10]

! LaTeX Error: Environment lstlisting undefined.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.920 \begin{lstlisting}
                        [language = R]
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! You can't use `macro parameter character #' in horizontal mode.
l.921 #
       # vectorization version  (main in used)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.921 ##
         vectorization version  (main in used)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.


Overfull \hbox (1.55635pt too wide) in paragraph at lines 927--931
[]\OT1/cmr/m/n/10 v1 = Find-Cut-Points(low, high, x1, y1, x2, y1, z11, z21) v2 
= Find-Cut-Points(low,
 []

! You can't use `macro parameter character #' in vertical mode.
l.935     #
           #  track the coordinate for x and y( if non-NA's)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.935     ##
              track the coordinate for x and y( if non-NA's)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.937     #
           # keep if non-NAs row >= 2 (npt >= 2)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.937     ##
             keep if non-NAs row >= 2 (npt >= 2)
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.942     #
           # delete all NA's,
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.942     ##
             delete all NA's,
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.956 #
       # inner condiction begin
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.956 ##
         inner condiction begin
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.957     #
           # first ocndiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.957     ##
             first ocndiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.984     #
           # second condiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.984     ##
             second condiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.990     x_
            1 = ifelse(cond7, x1,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.993 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.994     y_
            1 = ifelse(cond7, y1,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.997 
      
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1003     x_
             2 = ifelse(cond10, NA,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1006 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1007     y_
             2 = ifelse(cond10, NA,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1010 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in vertical mode.
l.1011     #
            # third condiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.1011     ##
              third condiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Misplaced alignment tab character &.
l.1012     cond13 = low <= z1 &
                                z1 <= high
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! You can't use `macro parameter character #' in horizontal mode.
l.1015 #
        # inner condiction end
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.1015 ##
          inner condiction end
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

[11]
! You can't use `macro parameter character #' in vertical mode.
l.1017 #
        # outer condiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.1017 ##
          outer condiction
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.1022                 ifelse(cond15, x_
                                        1,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1027 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (103.10161pt too wide) in paragraph at lines 1021--1027
[]\OT1/cmr/m/n/10 xout.1 = ifelse(cond14, x.1, ifelse(cond15, x$[]\OML/cmm/m/it
/10 ; x::\OT1/cmr/m/n/10 1))\OML/cmm/m/it/10 xout:\OT1/cmr/m/n/10 2 = \OML/cmm/
m/it/10 ifelse\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 cond\OT1/cmr/m/n/10 14\OML/cmm/
m/it/10 ; x:\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 ; ifelse\OT1/cmr/m/n/10 (\OML/cmm
/m/it/10 cond\OT1/cmr/m/n/10 15\OML/cmm/m/it/10 ; x[]; NA\OT1/cmr/m/n/10 ))$ 
 []

! Missing $ inserted.
<inserted text> 
                $
l.1029                 ifelse(cond15, y_
                                        1,
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! You can't use `macro parameter character #' in math mode.
l.1034 #
        # outer condiction end
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.1034 ##
          outer condiction end
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.1035 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (185.36955pt too wide) in paragraph at lines 1028--1035
[]\OT1/cmr/m/n/10 yout.1 = ifelse(cond14, y.1, ifelse(cond15, y$[]\OML/cmm/m/it
/10 ; y::\OT1/cmr/m/n/10 1))\OML/cmm/m/it/10 yout:\OT1/cmr/m/n/10 2 = \OML/cmm/
m/it/10 ifelse\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 cond\OT1/cmr/m/n/10 14\OML/cmm/
m/it/10 ; y:\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 ; ifelse\OT1/cmr/m/n/10 (\OML/cmm
/m/it/10 cond\OT1/cmr/m/n/10 15\OML/cmm/m/it/10 ; y[]; NA\OT1/cmr/m/n/10 ))\OML
/cmm/m/it/10 outercondictionend$ 
 []

! You can't use `macro parameter character #' in vertical mode.
l.1036     #
            # return x1, x2, y1, y2
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.1036     ##
              return x1, x2, y1, y2
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.1042 C_
         filledcontour = function(plot)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1047 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1047 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (95.5167pt too wide) in paragraph at lines 1042--1047
[]\OT1/cmr/m/n/10 C$[]\OML/cmm/m/it/10 illedcontour \OT1/cmr/m/n/10 = \OML/cmm/
m/it/10 function\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 plot\OT1/cmr/m/n/10 )[]$ 
 []


Overfull \hbox (23.9173pt too wide) in paragraph at lines 1063--1067
[]\OT1/cmr/m/n/10 z11 = as.numeric(t(z[-nx, -ny])) z21 = as.numeric(t(z[-1, -ny
 ])) z12 = as.numeric(t(z[-
 []

! You can't use `macro parameter character #' in vertical mode.
l.1079     #
            # rep color until the same length of x, then subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.1079     ##
              rep color until the same length of x, then subsetting
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.1084         cols = rep_
                          len(cols, ns - 1)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten $.
l.1085     }
            
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! You can't use `macro parameter character #' in math mode.
l.1087     #
            # feed color as well as subseeting as x and y
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.1087     ##
              feed color as well as subseeting as x and y
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.1094     #
            # actual drawing
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in math mode.
l.1094     ##
              actual drawing
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Extra }, or forgotten $.
l.1099 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Missing $ inserted.
<inserted text> 
                $
l.1100 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (92.63612pt too wide) in paragraph at lines 1079--1100
\OML/cmm/m/it/10 z\OT1/cmr/m/n/10 21\OML/cmm/m/it/10 ; z\OT1/cmr/m/n/10 12 = \O
ML/cmm/m/it/10 z\OT1/cmr/m/n/10 12\OML/cmm/m/it/10 ; z\OT1/cmr/m/n/10 22 = \OML
/cmm/m/it/10 z\OT1/cmr/m/n/10 22\OML/cmm/m/it/10 ; colrep \OT1/cmr/m/n/10 = \OM
L/cmm/m/it/10 colrep\OT1/cmr/m/n/10 )\OML/cmm/m/it/10 actualdrawingdepth \OT1/c
mr/m/n/10 = \OML/cmm/m/it/10 gotovp\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 TRUE\OT1/c
mr/m/n/10 )\OML/cmm/m/it/10 grid:polygon\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 out$\
OT1/cmr/m/n/10 x,
 []

! You can't use `macro parameter character #' in vertical mode.
l.1102 #
        # for loop version
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.1102 ##
          for loop version
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.1103 #
        # identical to C_filledcontour in plot3d.c but very slow
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
l.1103 ##
          identical to C_filledcontour in plot3d.c but very slow
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.1103 ## identical to C_
                         filledcontour in plot3d.c but very slow
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1112     x = out1$
                    x; y = out1$y; z = out1$z; npt = out1$npt
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing $ inserted.
<inserted text> 
                $
l.1113 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.


Overfull \hbox (51.23738pt too wide) in paragraph at lines 1102--1113
[]\OT1/cmr/m/n/10 for loop ver-sion  iden-ti-cal to C$[]\OML/cmm/m/it/10 illedc
ontourinplot\OT1/cmr/m/n/10 3\OML/cmm/m/it/10 d:cbutveryslowlFindPolygonVertice
s \OT1/cmr/m/n/10 =
 []


Overfull \hbox (359.38535pt too wide) in paragraph at lines 1102--1113
\OML/cmm/m/it/10 function\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 low; high; x\OT1/cmr
/m/n/10 1\OML/cmm/m/it/10 ; x\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 ; y\OT1/cmr/m/n/
10 1\OML/cmm/m/it/10 ; y\OT1/cmr/m/n/10 2\OML/cmm/m/it/10 ; z\OT1/cmr/m/n/10 11
\OML/cmm/m/it/10 ; z\OT1/cmr/m/n/10 21\OML/cmm/m/it/10 ; z\OT1/cmr/m/n/10 12\OM
L/cmm/m/it/10 ; z\OT1/cmr/m/n/10 22\OML/cmm/m/it/10 ; x; y; z; npt\OT1/cmr/m/n/
10 )[]$x;
 []

! Missing $ inserted.
<inserted text> 
                $
l.1128 lC_
          filledcontour = function(plot)
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing $ inserted.
<inserted text> 
                $
l.1133 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Missing } inserted.
<inserted text> 
                }
l.1133 
       
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.


Overfull \hbox (98.29448pt too wide) in paragraph at lines 1128--1133
[]\OT1/cmr/m/n/10 lC$[]\OML/cmm/m/it/10 illedcontour \OT1/cmr/m/n/10 = \OML/cmm
/m/it/10 function\OT1/cmr/m/n/10 (\OML/cmm/m/it/10 plot\OT1/cmr/m/n/10 )[]$ 
 []

[12]
! You can't use `macro parameter character #' in vertical mode.
l.1145     #
            # do it this way as coerceVector can lose dims, e.g. for a list ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in vertical mode.
l.1145     ##
              do it this way as coerceVector can lose dims, e.g. for a list ...
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn't ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Missing $ inserted.
<inserted text> 
                $
l.1168 
       
I've inserted a begin-math/end-math symbol since I think
you left one out. Proceed, with fingers crossed.

! Extra }, or forgotten \endgroup.
l.1179 }
        
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.1261         if(low <= z1 &
                             & z1 <= high) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Misplaced alignment tab character &.
l.1261         if(low <= z1 &&
                               z1 <= high) {
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


! LaTeX Error: \begin{document} ended by \end{lstlisting}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1271 \end{lstlisting}
                       
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[13] [14] (Appendix.aux) ) 
Here is how much of TeX's memory you used:
 451 strings out of 493335
 5370 string characters out of 3147021
 61554 words of memory out of 3000000
 4048 multiletter control sequences out of 15000+200000
 6414 words of font info for 24 fonts, out of 3000000 for 9000
 1141 hyphenation exceptions out of 8191
 23i,5n,17p,168b,125s stack positions out of 5000i,500n,10000p,200000b,50000s
<C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public
/amsfonts/cm/cmbx10.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/a
msfonts/cm/cmbx12.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/ams
fonts/cm/cmmi10.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfo
nts/cm/cmmi7.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfonts
/cm/cmr10.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfonts/cm
/cmr7.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfonts/cm/cms
y10.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfonts/cm/cmsy7
.pfb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfonts/cm/cmtt10.p
fb><C:/Program Files (x86)/MiKTeX 2.9/fonts/type1/public/amsfonts/cm/cmtt8.pfb>

Output written on Appendix.pdf (14 pages, 147514 bytes).
PDF statistics:
 88 PDF objects out of 1000 (max. 8388607)
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

